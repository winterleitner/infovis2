{"version":3,"sources":["logo.svg","StartScreen.js","utils/idgen.js","visualizations/Test.js","Layout.js","pages/Welcome.js","App.js","reportWebVitals.js","index.js"],"names":["StartScreen","props","className","src","logo","alt","to","lastId","Test","useState","idgen","id","useEffect","d3","append","attr","width","height","selectAll","data","enter","d","i","defaultProps","Layout","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","nav","DropdownMenu","right","DropdownItem","divider","children","Welcome","loading","css","console","log","slice","length","toLocaleDateString","App","setData","setLoading","papa","parse","download","header","complete","results","file","parsed","map","r","moment","toDate","pop","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f80f5085.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from \"./logo.svg\";\nimport { Link } from 'react-router-dom';\n\nexport const StartScreen = (props) => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Nuclear <code>diving</code> decision support system.\n                </p>\n                <Link to=\"/welcome\" className=\"btn btn-danger\">Enter Page and see visualizations</Link>\n            </header>\n        </div>\n    )\n}","let lastId = 0;\n\nexport default function(prefix='id') {\n    lastId++;\n    return `${prefix}${lastId}`;\n}","import React, {useEffect, useState} from 'react'\nimport * as d3 from 'd3'\nimport idgen from \"../utils/idgen\";\n\nexport const Test = (props) => {\n    const [id] = useState(idgen());\n    useEffect(() => {\n        const data = [12, 5, 6, 6, 9, 10];\n        const svg = d3.select(`#${id}`).append(\"svg\").attr(\"width\", props.width).attr(\"height\", props.height);\n        svg.selectAll(\"rect\")\n            .data(data)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", (d, i) => i * 70)\n            .attr(\"y\", 0)\n            .attr(\"width\", 25)\n            .attr(\"height\", (d, i) => d*10)\n            .attr(\"fill\", \"green\");\n        },[])\n\n\n    return (\n        <div id={id}></div>\n    )\n}\n\nTest.defaultProps = {width: 700, height: 300}\n","import React, {useState} from 'react'\nimport {\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavLink,\n    DropdownMenu,\n    DropdownItem,\n    NavbarText,\n    NavbarToggler,\n    Collapse,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Nav\n} from \"reactstrap\";\n\nconst Layout = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/\">Scuba Diving Support</NavbarBrand>\n                <NavbarToggler onClick={toggle}/>\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink href=\"/#/welcome\">Home</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"/#/vis\">Vis</NavLink>\n                        </NavItem>\n                    </Nav>\n                    <UncontrolledDropdown navbar>\n                        <DropdownToggle nav>\n                            Group 14\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem>\n                                <strong>Members</strong>\n                            </DropdownItem>\n                            <DropdownItem divider/>\n                            <DropdownItem>\n                                Simone Andreetto\n                            </DropdownItem>\n                            <DropdownItem>\n                                Christoph GÃ¶tz\n                            </DropdownItem>\n                            <DropdownItem>\n                                Felix Winterleitner\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </Collapse>\n            </Navbar>\n            <div className=\"container\">\n            {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport ClockLoader from 'react-spinners/ClockLoader'\n\nconst Welcome = props => {\n    // Loading text\n    if (props.loading)\n        return (\n            <div>\n                <h1>Welcome to the Diving Support System Visualization Page</h1>\n                <p>Please wait while the page is loading. This might take some time, since a large number of items are being parsed from CSV in real time.</p>\n                <ClockLoader css=\"margin: 0 auto;\"/>\n            </div>\n        )\n    console.log(props.data.slice(1).slice(-5))\n    return (\n        <div>\n            <h1>Welcome to the Diving Support System Visualization Page</h1>\n            <p>Here, our sample visualizations for the use case of scuba diving in the San Francisco Bay area are\n                presented.</p>\n            <p>The dataset in use can be obtained from: <a href=\"infovis2/SFBay.csv\">SFBay.csv</a></p>\n            <p>It consists of {props.data.length} data entries recorded from {props.data[0]['TimeStamp'].toLocaleDateString(\"de-DE\")} to {props.data[props.data.length - 1]['TimeStamp'].toLocaleDateString(\"de-DE\")} in the San Francisco Bay area.</p>\n        </div>\n    )\n}\n\nexport default Welcome","import './App.css';\nimport React, {useEffect, useState} from 'react'\nimport {Route} from 'react-router';\nimport {StartScreen} from \"./StartScreen.js\";\nimport {Test} from \"./visualizations/Test\";\nimport papa from \"papaparse\";\nimport Layout from \"./Layout\";\nimport Welcome from \"./pages/Welcome\";\nimport moment from 'moment'\n\nconst App = () => {\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n    useEffect(() => {\n        papa.parse(\"infovis2/SFBay.csv\", {\n            download: true,\n            header: true,\n            complete: function (results, file) {\n                let parsed = results.data.map(r => {return {...r, 'TimeStamp': moment(r['TimeStamp']).toDate()}})\n                parsed.pop()\n                setData(parsed)\n                setLoading(false)\n            }\n        })\n    }, [])\n    return (\n        <>\n            <Route exact path=\"/\" render={() => <StartScreen data={data}/>}/>\n\n            <Layout>\n                <Route exact path=\"/welcome\" render={() => <Welcome data={data} loading={loading}/>}/>\n                <Route exact path=\"/vis\" render={() => <Test data={data}/>}/>\n            </Layout>\n\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}