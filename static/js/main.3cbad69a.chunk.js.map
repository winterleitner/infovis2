{"version":3,"sources":["logo.svg","StartScreen.js","utils/idgen.js","visualizations/Test.js","Layout.js","pages/Welcome.js","visualizations/DepthTemperature.js","utils/filter.js","pages/DepthTemperaturePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartScreen","props","className","src","logo","alt","loading","css","to","lastId","prefix","Test","useState","idgen","id","useEffect","data","svg","d3","append","attr","width","height","selectAll","enter","d","i","text","defaultProps","Layout","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","nav","DropdownMenu","right","DropdownItem","divider","children","Welcome","length","toLocaleDateString","DepthTemperature","setGraphic","document","getElementById","innerHTML","stations","reduce","entryMap","e","set","get","Map","reducedData","dataList","keys","s","res","depths","measures","avg","total","next","toFixed","push","sort","a","b","prepareData","maxDepth","map","concat","m","console","log","margin","colorScale","domain","x","range","padding","call","tickSizeOuter","y","t","tip","html","dat","toElement","__data__","offset","bandwidth","style","on","show","hide","Filter","attribute","comparator","threshold","this","moment","toDate","toString","filter","d1","d2","getFullYear","getMonth","getDate","DepthTemperaturePage","filters","setFilters","useRef","filtered_data","Row","Col","xs","f","Badge","fil","Input","innerRef","type","attributes","o","value","placeholder","Button","block","current","comp","thres","addFilter","App","setData","setAttributes","setLoading","papa","parse","download","header","dynamicTyping","complete","results","file","parsed","r","pop","Object","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3cbad69a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from \"./logo.svg\";\nimport { Link } from 'react-router-dom';\nimport ClockLoader from \"react-spinners/ClockLoader\";\n\nexport const StartScreen = (props) => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Nuclear <code>diving</code> decision support system.\n                </p>\n                {props.loading ? <><small>Please wait while the CSV-File is parsed...</small><br/><ClockLoader css=\"margin: 0 auto;\"/></> :\n                <Link to=\"/welcome\" className=\"btn btn-danger\">Enter Page and see visualizations</Link>}\n            </header>\n        </div>\n    )\n}","let lastId = 0;\n\nexport default function(prefix='id') {\n    lastId++;\n    return `${prefix}${lastId}`;\n}","import React, {useEffect, useState} from 'react'\nimport * as d3 from 'd3'\nimport idgen from \"../utils/idgen\";\n\nexport const Test = (props) => {\n    const [id] = useState(idgen());\n    useEffect(() => {\n        const data = [{\"Station.Number\": 12, \"Depth\": 5}, {\"Station.Number\": 5, \"Depth\": 20}, {\n            \"Station.Number\": 5,\n            \"Depth\": 30\n        }];\n        const svg = d3.select(`#${id}`).append(\"svg\").attr(\"width\", props.width).attr(\"height\", props.height);\n        svg.selectAll(\"rect\")\n            .data(data)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", (d, i) => i * 70)\n            .attr(\"y\", 0)\n            .attr(\"width\", 25)\n            .attr(\"height\", (d, i) => d[\"Depth\"] * 5)\n            .attr(\"fill\", \"green\");\n\n        svg.selectAll(\"text\")\n            .data(data)\n            .enter()\n            .append(\"text\")\n            .text((d) => d['Station.Number'])\n            .attr(\"x\", (d, i) => i * 70)\n            .attr(\"y\", (d, i) => (6 * d['Depth']) + 10)\n    }, [])\n\n\n    return (\n        <div id={id}></div>\n    )\n}\n\nTest.defaultProps = {width: 700, height: 300}\n","import React, {useState} from 'react'\nimport {\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavLink,\n    DropdownMenu,\n    DropdownItem,\n    NavbarToggler,\n    Collapse,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Nav\n} from \"reactstrap\";\n\nconst Layout = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/#/\">Scuba Diving Support</NavbarBrand>\n                <NavbarToggler onClick={toggle}/>\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink href=\"#/welcome\">Home</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"#/dt\">Depth-Temperature</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"#/vis\">Vis</NavLink>\n                        </NavItem>\n                    </Nav>\n                    <UncontrolledDropdown navbar>\n                        <DropdownToggle nav>\n                            Group 14\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem>\n                                <strong>Members</strong>\n                            </DropdownItem>\n                            <DropdownItem divider/>\n                            <DropdownItem>\n                                Simone Andreetto\n                            </DropdownItem>\n                            <DropdownItem>\n                                Christoph Götz\n                            </DropdownItem>\n                            <DropdownItem>\n                                Felix Winterleitner\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </Collapse>\n            </Navbar>\n            <div className=\"container\">\n            {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport ClockLoader from 'react-spinners/ClockLoader'\n\nconst Welcome = props => {\n    return (\n        <div>\n            <h1>Welcome to the Diving Support System Visualization Page</h1>\n            <p>Here, our sample visualizations for the use case of scuba diving in the San Francisco Bay area are\n                presented.</p>\n            <p>The dataset in use can be obtained from: <a href=\"infovis2/SFBay.csv\">SFBay.csv</a></p>\n            <p>It consists of {props.data.length} data entries recorded from {props.data[0]['TimeStamp'].toLocaleDateString(\"de-DE\")} to {props.data[props.data.length - 1]['TimeStamp'].toLocaleDateString(\"de-DE\")} in the San Francisco Bay area.</p>\n        </div>\n    )\n}\n\nexport default Welcome","import React, {useEffect, useState} from 'react'\nimport * as d3 from 'd3'\nimport tip from 'd3-tip'\nimport idgen from \"../utils/idgen\";\n\nexport const DepthTemperature = (props) => {\n    const [id] = useState(idgen());\n    const [graphic, setGraphic] = useState(null)\n    const prepareData = (data) => {\n        let stations = data.reduce(\n            (entryMap, e) => entryMap.set(e['Station.Number'], [...entryMap.get(e['Station.Number']) || [], e]),\n            new Map()\n        );\n\n        let reducedData = []\n        let dataList = []\n\n        for (let s of stations.keys()) {\n            const res = {\"Station.Number\": s, \"Measures\": []}\n            const entries = stations.get(s)\n            let depths = entries.reduce(\n                (entryMap, e) => entryMap.set(e['Depth'], [...entryMap.get(e['Depth']) || [], e]),\n                new Map()\n            );\n            for (let d of depths.keys()) {\n                const measures = depths.get(d)\n                const avg = (measures.reduce((total, next) => total + next['Temperature'], 0) / measures.length).toFixed(1)\n                res['Measures'].push({\"Depth\": d, \"Temperature\": avg})\n                dataList.push({\"Station.Number\": s, \"Depth\": d, \"Temperature\": avg}\n                )\n            }\n            res['Measures'].sort((a, b) => (a['Depth'] > b['Depth']) ? -1 : 1);\n            reducedData.push(res)\n        }\n        reducedData.sort((a, b) => (a['Station.Number'] > b['Station.Number']) ? 1 : -1);\n\n        return reducedData\n    }\n\n    useEffect(() => {\n        document.getElementById(id).innerHTML = \"\"\n        const data = prepareData(props.data)\n        const depths = data.map(d => d['Measures']).reduce((a, b) => a.concat(b), []).map(m => m['Depth'])\n        const maxDepth = depths.reduce((a, b) => a > b ? a : b, 0)\n        console.log(\"Data\", maxDepth)\n\n        // set the dimensions and margins of the graph\n        var margin = {top: 40, right: 20, bottom: 20, left: 40},\n            width = props.width - margin.left - margin.right,\n            height = props.height - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        const svg = d3.select(`#${id}`)\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        var colorScale = d3.scaleSequential(d3.interpolateRdYlBu)\n            .domain([30, 0]);\n\n        // x axis\n        var x = d3.scaleBand()\n            .domain(data.map(d => d['Station.Number']))\n            .range([0, width])\n            .padding([0.3])\n        svg.append(\"g\")\n            .call(d3.axisTop(x).tickSizeOuter(0));\n\n        // x axis label\n        svg.append(\"text\")\n            .attr(\"class\", \"x label\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", width)\n            .attr(\"y\", -20)\n            .text(\"Station Number\");\n\n        // y axis\n        var y = d3.scaleLinear()\n            .domain([maxDepth, 0])\n            .range([height, 0]);\n        svg.append(\"g\")\n            .call(d3.axisLeft(y));\n\n        //y axis label\n        svg.append(\"text\")\n            .attr(\"class\", \"y label\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", -height + 50)\n            .attr(\"y\", -35)\n            .attr(\"dy\", \".75em\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .text(\"Depth\");\n\n        // tooltip\n        let t = tip().attr('class', 'd3-tip')\n            .html(function(d) { const dat = d.toElement.__data__; return dat['Depth'] + \"m: \" + dat['Temperature'] + \"°C\" ; }).offset([20, 0]);\n        svg.call(t);\n\n        // bar groups\n        var bar = svg.append(\"g\").selectAll(\"g\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .attr(\"transform\", function (d, i) {\n                return \"translate(\" + x(d['Station.Number']) + \", 0)\";\n            });\n\n        // bars\n        bar.selectAll(\"rect\")\n            .data(d => d['Measures'])\n            .enter()\n            .append(\"rect\")\n            .attr(\"y\", 1)\n            .attr(\"height\", function (d) {\n                return y(d['Depth']);\n            })\n            .attr(\"width\", x.bandwidth())\n            .style(\"fill\", function (d) {\n                return colorScale(d['Temperature']);\n            })\n            .on('mouseover', t.show)\n            .on('mouseout', t.hide);\n\n        setGraphic(svg)\n    }, [props.data])\n    return (\n        <div>\n            <h3>Temperature from low to high</h3>\n            <div id={id}></div>\n        </div>\n    )\n}\n\nDepthTemperature.defaultProps = {width: 700, height: 500}\n","import moment from 'moment'\n\nclass Filter {\n    constructor(attribute, comparator, threshold) {\n        this.attribute = attribute\n        this.comparator = comparator\n        this.threshold = threshold\n        if (attribute == \"TimeStamp\") {\n            this.threshold = moment(threshold).toDate()\n        }\n    }\n\n    toString () {\n        if (this.attribute == \"TimeStamp\") {\n            return this.attribute + \" \" + this.comparator + \" \" + this.threshold.toLocaleDateString(\"de-DE\");\n        }\n        return this.attribute + \" \" + this.comparator + \" \" + this.threshold.toString();\n    }\n\n    filter(data) {\n        switch (this.comparator) {\n            case \"=\":\n            case \"==\":\n                if (this.attribute == \"TimeStamp\")\n                    return data.filter(d => sameDay(d[this.attribute], this.threshold))\n                return data.filter(d => d[this.attribute] == this.threshold)\n            case \"<\":\n                return data.filter(d => d[this.attribute] < this.threshold)\n            case \"<=\":\n                return data.filter(d => d[this.attribute] <= this.threshold)\n            case \">\":\n                return data.filter(d => d[this.attribute] > this.threshold)\n            case \">=\":\n                return data.filter(d => d[this.attribute] >= this.threshold)\n        }\n    }\n}\n\nfunction sameDay(d1, d2) {\n    return d1.getFullYear() === d2.getFullYear() &&\n        d1.getMonth() === d2.getMonth() &&\n        d1.getDate() === d2.getDate();\n}\n\nexport default Filter","import React, {useState, useRef} from 'react'\nimport {DepthTemperature} from \"../visualizations/DepthTemperature\";\nimport {Row, Col, Badge, Button, Input, Label} from \"reactstrap\";\nimport Filter from \"../utils/filter\";\n\nconst DepthTemperaturePage = props => {\n    // holds list of filter functions\n    const [filters, setFilters] = useState([])\n    const attribute = useRef(null)\n    const comparator = useRef(null)\n    const threshold = useRef(null)\n    const filtered_data = () => {\n        let data = props.data\n        for (let f of filters) {\n            data = f.filter(data)\n        }\n        return data\n    }\n    const addFilter = () => {\n        const attr = attribute.current.value\n        const comp = comparator.current.value\n        const thres = threshold.current.value\n        if (thres.length == 0) return\n        const f = new Filter(attr, comp, thres)\n        setFilters([...filters, f])\n    }\n    return (\n        <Row>\n            <Col xs=\"8\" className=\"visualization-panel\">\n                <DepthTemperature data={filtered_data()}/>\n            </Col>\n            <Col xs=\"4\" className=\"control-panel\">\n                <Row>\n                    <Col xs=\"12\"><strong>Filters</strong><small> (click to remove)</small></Col>\n                    <Col xs=\"12\">\n                        {filters.map(f => <Badge className=\"m-1\" color=\"success\"\n                                                 onClick={() => setFilters(filters.filter(fil => f != fil))}>{f.toString()}</Badge>)}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"pl-3\"><small>{filtered_data().length} rows match filters.</small></Col>\n                </Row>\n                <hr/>\n                <Row>\n                    <Col xs=\"12\"><strong>Add Filter</strong></Col>\n                </Row>\n                <Row className=\"mt-1\">\n                    <Col xs=\"3\">Attribute</Col>\n                    <Col xs=\"9\">\n                        <Input innerRef={attribute} type=\"select\">\n                            {props.attributes.map(o => <option value={o}>{o}</option>)}\n                        </Input>\n                    </Col>\n                </Row>\n                <Row className=\"mt-1\">\n                    <Col xs=\"3\">Comparator</Col>\n                    <Col xs=\"9\">\n                        <Input innerRef={comparator} type=\"select\">\n                            {[\"==\", \"<\", \"<=\", \">\", \">=\"].map(o => <option value={o}>{o}</option>)}\n                        </Input>\n                    </Col>\n                </Row>\n                <Row className=\"mt-1 mb-2\">\n                    <Col xs=\"3\">Threshold</Col>\n                    <Col xs=\"9\">\n                        <Input innerRef={threshold} type=\"text\" placeholder={\"[for dates use: yyyy-mm-dd]\"}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"12\">\n                        <Button block onClick={() => addFilter()}>Add\n                            Filter</Button>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>)\n}\nexport default DepthTemperaturePage\n\n","import './App.css';\nimport React, {useEffect, useState} from 'react'\nimport {Route} from 'react-router';\nimport {StartScreen} from \"./StartScreen.js\";\nimport {Test} from \"./visualizations/Test\";\nimport papa from \"papaparse\";\nimport Layout from \"./Layout\";\nimport Welcome from \"./pages/Welcome\";\nimport moment from 'moment'\nimport DepthTemperaturePage from \"./pages/DepthTemperaturePage\";\n\nconst App = () => {\n    const [data, setData] = useState([])\n    const [attributes, setAttributes] = useState([])\n    const [loading, setLoading] = useState(true)\n    useEffect(() => {\n        papa.parse(\"infovis2/SFBay.csv\", {\n            download: true,\n            header: true,\n            dynamicTyping: true,\n            complete: function (results, file) {\n                let parsed = results.data.map(r => {return {...r, 'TimeStamp': moment(r['TimeStamp']).toDate()}})\n                parsed.pop()\n                setData(parsed)\n                setAttributes(Object.keys(parsed[0]))\n                setLoading(false)\n            }\n        })\n    }, [])\n    return (\n        <>\n            <Route exact path=\"/\" render={() => <StartScreen data={data} loading={loading}/>}/>\n\n            <Layout>\n                <Route exact path=\"/welcome\" render={() => <Welcome data={data}/>}/>\n                <Route exact path=\"/dt\" render={() => <DepthTemperaturePage data={data} attributes={attributes}/>}/>\n                <Route exact path=\"/vis\" render={() => <Test data={data}/>}/>\n            </Layout>\n\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}