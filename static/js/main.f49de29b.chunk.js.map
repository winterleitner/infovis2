{"version":3,"sources":["diver.png","StartScreen.js","utils/idgen.js","Layout.js","pages/Welcome.js","visualizations/DepthTemperature.js","visualizations/DateTemperature.js","utils/filter.js","filtering/FilterComponent.js","pages/DepthTemperaturePage.js","visualizations/MapGuide.js","pages/MapGuidePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartScreen","props","className","src","logo","alt","loading","css","to","href","title","lastId","prefix","Layout","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","nav","DropdownMenu","right","DropdownItem","divider","children","Welcome","data","length","toLocaleDateString","DepthTemperature","idgen","id","setGraphic","useEffect","document","getElementById","innerHTML","stations","reduce","entryMap","e","set","get","Map","reducedData","dataList","keys","s","res","depths","d","measures","avg","total","next","toFixed","push","sort","a","b","prepareData","maxDepth","map","concat","m","console","log","margin","width","height","svg","d3","append","attr","colorScale","domain","x","range","padding","call","tickSizeOuter","text","y","t","tip","html","dat","toElement","__data__","offset","selectAll","enter","i","bandwidth","style","on","show","hide","defaultProps","DateTemperature","Temperature","datum","Filter","attribute","comparator","threshold","this","moment","toDate","toString","filter","d1","d2","getFullYear","getMonth","getDate","FilterComponent","useRef","Row","Col","xs","filters","f","Badge","removeFilter","matchCount","Input","innerRef","type","attributes","o","value","placeholder","Button","block","current","comp","thres","addFilter","DepthTemperaturePage","setFilters","filtered_data","fil","MapGuide","setStations","preparedData","setPreparedData","papa","parse","download","header","dynamicTyping","complete","results","file","coords","entries","avgTemp","avgExtinction","avgBackscatter","avgSalinity","station","st","c","isGood","calculateScore","area","createElement","setAttribute","result","notify","notifyData","MapGuidePage","setMeasures","Object","k","App","setData","setAttributes","setLoading","parsed","r","pop","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"qPAAe,MAA0B,kC,iBCK5BA,EAAc,SAACC,GACxB,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,mDACsB,0CADtB,+BAGCJ,EAAMK,QAAU,qCAAE,gFAA0D,uBAAK,cAAC,IAAD,CAAaC,IAAI,uBACnG,cAAC,IAAD,CAAMC,GAAG,WAAWN,UAAU,iBAA9B,+CACA,sBAAKA,UAAU,cAAf,2BAA2C,mBAAGO,KAAK,2CAA2CC,MAAM,UAAzD,qBAA3C,SAA+H,mBAAGD,KAAK,4BAA4BC,MAAM,WAA1C,uC,QCf3IC,EAAS,EAEE,aAAuB,IAAdC,EAAa,uDAAN,KAE3B,OADAD,IACM,GAAN,OAAUC,GAAV,OAAmBD,I,oHC6DRE,EAlDA,SAACZ,GAAW,IAAD,EACMa,oBAAS,GADf,mBACfC,EADe,KACPC,EADO,KAItB,OACI,gCACI,eAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAnC,UACI,cAACC,EAAA,EAAD,CAAaZ,KAAK,KAAlB,kCACA,cAACa,EAAA,EAAD,CAAeC,QANZ,kBAAMP,GAAWD,MAOpB,eAACS,EAAA,EAAD,CAAUT,OAAQA,EAAQU,QAAM,EAAhC,UACI,eAACC,EAAA,EAAD,CAAKxB,UAAU,UAAUuB,QAAM,EAA/B,UACI,cAACE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASnB,KAAK,YAAd,oBAEJ,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASnB,KAAK,OAAd,iCAEJ,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASnB,KAAK,QAAd,oCAGR,eAACoB,EAAA,EAAD,CAAsBJ,QAAM,EAA5B,UACI,cAACK,EAAA,EAAD,CAAgBC,KAAG,EAAnB,sBAGA,eAACC,EAAA,EAAD,CAAcC,OAAK,EAAnB,UACI,cAACC,EAAA,EAAD,UACI,+CAEJ,cAACA,EAAA,EAAD,CAAcC,SAAO,IACrB,cAACD,EAAA,EAAD,+BAGA,cAACA,EAAA,EAAD,gCAGA,cAACA,EAAA,EAAD,8CAOhB,qBAAKhC,UAAU,YAAf,SACCD,EAAMmC,eC5CJC,EAZC,SAAApC,GACZ,OACI,gCACI,yFACA,8IAEA,0EAA4C,mBAAGQ,KAAK,qBAAR,0BAC5C,gDAAmBR,EAAMqC,KAAKC,OAA9B,+BAAkEtC,EAAMqC,KAAK,GAAX,UAA2BE,mBAAmB,SAAhH,OAA8HvC,EAAMqC,KAAKrC,EAAMqC,KAAKC,OAAS,GAA/B,UAA+CC,mBAAmB,SAAhM,yC,yCCLCC,EAAmB,SAACxC,GAAW,IAAD,EAC1Ba,mBAAS4B,KAAfC,EADgC,sBAET7B,mBAAS,MAFA,mBAEvB8B,GAFuB,WA2HvC,OAzFAC,qBAAU,WACNC,SAASC,eAAeJ,GAAIK,UAAY,GACxC,IAAMV,EAjCU,SAACA,GACjB,IAD0B,EACtBW,EAAWX,EAAKY,QAChB,SAACC,EAAUC,GAAX,OAAiBD,EAASE,IAAID,EAAE,kBAAf,sBAAsCD,EAASG,IAAIF,EAAE,oBAAsB,IAA3E,CAA+EA,OAChG,IAAIG,KAGJC,EAAc,GACdC,EAAW,GAPW,cASZR,EAASS,QATG,IAS1B,2BAA+B,CAAC,IAAD,EAAtBC,EAAsB,QACrBC,EAAM,CAAC,iBAAkBD,EAAG,SAAY,IAE1CE,EADYZ,EAASK,IAAIK,GACRT,QACjB,SAACC,EAAUC,GAAX,OAAiBD,EAASE,IAAID,EAAC,MAAd,sBAA6BD,EAASG,IAAIF,EAAC,QAAc,IAAzD,CAA6DA,OAC9E,IAAIG,KALmB,cAObM,EAAOH,QAPM,IAO3B,2BAA6B,CAAC,IAArBI,EAAoB,QACnBC,EAAWF,EAAOP,IAAIQ,GACtBE,GAAOD,EAASb,QAAO,SAACe,EAAOC,GAAR,OAAiBD,EAAQC,EAAI,cAAiB,GAAKH,EAASxB,QAAQ4B,QAAQ,GACzGP,EAAG,SAAaQ,KAAK,CAAC,MAASN,EAAG,YAAeE,IACjDP,EAASW,KAAK,CAAC,iBAAkBT,EAAG,MAASG,EAAG,YAAeE,KAXxC,8BAc3BJ,EAAG,SAAaS,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAC,MAAYC,EAAC,OAAc,EAAI,KAChEf,EAAYY,KAAKR,IAxBK,8BA4B1B,OAFAJ,EAAYa,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE,kBAAoBC,EAAE,kBAAqB,GAAK,KAEvEf,EAKMgB,CAAYvE,EAAMqC,MAEzBmC,EADSnC,EAAKoC,KAAI,SAAAZ,GAAC,OAAIA,EAAC,YAAcZ,QAAO,SAACoB,EAAGC,GAAJ,OAAUD,EAAEK,OAAOJ,KAAI,IAAIG,KAAI,SAAAE,GAAC,OAAIA,EAAC,SAChE1B,QAAO,SAACoB,EAAGC,GAAJ,OAAUD,EAAIC,EAAID,EAAIC,IAAG,GACxDM,QAAQC,IAAI,OAAQxC,GAGpB,IAAIyC,EAAe,GAAfA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAgD,GAChDC,EAAQ/E,EAAM+E,MAAQD,EAAcA,EACpCE,EAAShF,EAAMgF,OAASF,EAAaA,EAGnCG,EAAMC,IAAA,WAAcxC,IACrByC,OAAO,OACPC,KAAK,QAASL,EAAQD,EAAcA,GACpCM,KAAK,SAAUJ,EAASF,EAAaA,GACrCK,OAAO,KACPC,KAAK,YACF,aAAeN,EAAc,IAAMA,EAAa,KAEpDO,EAAaH,IAAmBA,KAC/BI,OAAO,CAAC,GAAI,IAGbC,EAAIL,MACHI,OAAOjD,EAAKoC,KAAI,SAAAZ,GAAC,OAAIA,EAAE,sBACvB2B,MAAM,CAAC,EAAGT,IACVU,QAAQ,CAAC,KACdR,EAAIE,OAAO,KACNO,KAAKR,IAAWK,GAAGI,cAAc,IAGtCV,EAAIE,OAAO,QACNC,KAAK,QAAS,WACdA,KAAK,cAAe,OACpBA,KAAK,IAAKL,GACVK,KAAK,KAAM,IACXQ,KAAK,kBAGV,IAAIC,EAAIX,MACHI,OAAO,CAACd,EAAU,IAClBgB,MAAM,CAACR,EAAQ,IACpBC,EAAIE,OAAO,KACNO,KAAKR,IAAYW,IAGtBZ,EAAIE,OAAO,QACNC,KAAK,QAAS,WACdA,KAAK,cAAe,OACpBA,KAAK,IAAe,GAATJ,GACXI,KAAK,KAAM,IACXA,KAAK,KAAM,SACXA,KAAK,YAAa,eAClBQ,KAAK,SAGV,IAAIE,EAAIC,cAAMX,KAAK,QAAS,UACvBY,MAAK,SAASnC,GAAK,IAAMoC,EAAMpC,EAAEqC,UAAUC,SAAU,OAAOF,EAAG,MAAY,MAAQA,EAAG,YAAkB,WAAUG,OAAO,CAAC,GAAI,IACnInB,EAAIS,KAAKI,GAGCb,EAAIE,OAAO,KAAKkB,UAAU,KAC/BhE,KAAKA,GACLiE,QACAnB,OAAO,KACPC,KAAK,aAAa,SAAUvB,EAAG0C,GAC5B,MAAO,aAAehB,EAAE1B,EAAE,mBAAqB,UAInDwC,UAAU,QACThE,MAAK,SAAAwB,GAAC,OAAIA,EAAC,YACXyC,QACAnB,OAAO,QACPC,KAAK,IAAK,GACVA,KAAK,UAAU,SAAUvB,GACtB,OAAOgC,EAAEhC,EAAC,UAEbuB,KAAK,QAASG,EAAEiB,aAChBC,MAAM,QAAQ,SAAU5C,GACrB,OAAOwB,EAAWxB,EAAC,gBAEtB6C,GAAG,YAAaZ,EAAEa,MAClBD,GAAG,WAAYZ,EAAEc,MAEtBjE,EAAWsC,KACZ,CAACjF,EAAMqC,OAEN,gCACI,2EACA,qBAAKK,GAAIA,QAKrBF,EAAiBqE,aAAe,CAAC9B,MAAO,IAAKC,OAAQ,KCnI9C,IAAM8B,EAAkB,SAAC9G,GAAW,IAAD,EACzBa,mBAAS4B,KAAfC,EAD+B,sBAER7B,mBAAS,MAFD,mBAEtB8B,GAFsB,WA0EtC,OAnEAC,qBAAU,WACNC,SAASC,eAAeJ,GAAIK,UAAY,GACxC,IAAMV,EAAmBrC,EAAMqC,KAG3ByC,EAAe,GAAfA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAgD,GAChDC,EAAQ/E,EAAM+E,MAAQD,EAAcA,EACpCE,EAAShF,EAAMgF,OAASF,EAAaA,EAGnCG,EAAMC,IAAA,WAAcxC,IACrByC,OAAO,OACPC,KAAK,QAASL,EAAQD,EAAcA,GACpCM,KAAK,SAAUJ,EAASF,EAAaA,GACrCK,OAAO,KACPC,KAAK,YACF,aAAeN,EAAc,IAAMA,EAAa,KAMpDS,EAAIL,MACHI,OAAOjD,EAAKoC,KAAI,SAAAZ,GAAC,OAAIA,EAAC,cACtB2B,MAAM,CAAC,EAAGT,IACVU,QAAQ,CAAC,KACdR,EAAIE,OAAO,KACNC,KAAK,YAAa,eAAiBJ,EAAS,KAC5CU,KAAKR,IAAcK,IAKxB,IAAIM,EAAIX,MACHI,OAAO,CAAC,EAAGJ,IAAO7C,GAAM,SAASwB,GAAK,OAASA,EAAEkD,iBACjDvB,MAAM,CAACR,EAAQ,IACpBC,EAAIE,OAAO,KACNO,KAAKR,IAAYW,IAGtBZ,EAAIE,OAAO,QACNC,KAAK,QAAS,WACdA,KAAK,cAAe,UACpBA,KAAK,IAAe,GAATJ,GACXI,KAAK,KAAM,IACXA,KAAK,KAAM,SACXA,KAAK,YAAa,eAClBQ,KAAK,eAQVX,EAAIE,OAAO,QACN6B,MAAM3E,GACN+C,KAAK,OAAQ,QACbA,KAAK,SAAU,aACfA,KAAK,eAAgB,KACrBA,KAAK,IAAKF,MACNK,GAAE,SAAS1B,GAAK,OAAO0B,EAAE1B,EAAC,cAC1BgC,GAAE,SAAShC,GAAK,OAAOgC,EAAEhC,EAAC,iBAGnClB,EAAWsC,KACZ,CAACjF,EAAMqC,OAEN,sBAAKpC,UAAU,OAAf,UACI,oEACA,8FACA,qBAAKyC,GAAIA,QAKrBoE,EAAgBD,aAAe,CAAC9B,MAAO,IAAKC,OAAQ,K,wCC5CrCiC,M,WAzCX,WAAYC,EAAWC,EAAYC,GAAY,oBAC3CC,KAAKH,UAAYA,EACjBG,KAAKF,WAAaA,EAClBE,KAAKD,UAAYA,EACA,aAAbF,IACAG,KAAKD,UAAYE,IAAOF,GAAWG,U,uDAKvC,MAAsB,aAAlBF,KAAKH,UACEG,KAAKH,UAAY,IAAMG,KAAKF,WAAa,IAAME,KAAKD,UAAU7E,mBAAmB,SAErF8E,KAAKH,UAAY,IAAMG,KAAKF,WAAa,IAAME,KAAKD,UAAUI,a,6BAGlEnF,GAAO,IAAD,OACT,OAAQgF,KAAKF,YACT,IAAK,IACL,IAAK,KACD,MAAsB,aAAlBE,KAAKH,UACE7E,EAAKoF,QAAO,SAAA5D,GAAC,OAcvB6D,EAdmC7D,EAAE,EAAKqD,WActCS,EAdkD,EAAKP,UAejEM,EAAGE,gBAAkBD,EAAGC,eAC3BF,EAAGG,aAAeF,EAAGE,YACrBH,EAAGI,YAAcH,EAAGG,UAH5B,IAAiBJ,EAAIC,KAbEtF,EAAKoF,QAAO,SAAA5D,GAAC,OAAIA,EAAE,EAAKqD,YAAc,EAAKE,aACtD,IAAK,IACD,OAAO/E,EAAKoF,QAAO,SAAA5D,GAAC,OAAIA,EAAE,EAAKqD,WAAa,EAAKE,aACrD,IAAK,KACD,OAAO/E,EAAKoF,QAAO,SAAA5D,GAAC,OAAIA,EAAE,EAAKqD,YAAc,EAAKE,aACtD,IAAK,IACD,OAAO/E,EAAKoF,QAAO,SAAA5D,GAAC,OAAIA,EAAE,EAAKqD,WAAa,EAAKE,aACrD,IAAK,KACD,OAAO/E,EAAKoF,QAAO,SAAA5D,GAAC,OAAIA,EAAE,EAAKqD,YAAc,EAAKE,kB,gCCqCnDW,EAlES,SAAA/H,GACpB,IAAMkH,EAAYc,iBAAO,MACnBb,EAAaa,iBAAO,MACpBZ,EAAYY,iBAAO,MAezB,OACI,sBAAK/H,UAAU,gBAAf,UACI,eAACgI,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,UAAa,6CAAwB,0DACrC,cAACD,EAAA,EAAD,CAAKC,GAAG,KAAR,SACKnI,EAAMoI,QAAQ3D,KAAI,SAAA4D,GAAC,OAAI,cAACC,EAAA,EAAD,CAAOrI,UAAU,MAAMgB,MAAM,UAC5BK,QAAS,kBAnB5BmG,EAmB+CY,OAlBjErI,EAAMuI,aAAad,GADF,IAACA,GAkBkB,SACkCY,EAAEb,qBAGpE,cAACS,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKjI,UAAU,OAAf,SAAsB,kCAAQD,EAAMwI,WAAd,8BAE1B,uBACA,cAACP,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SAAa,oDAEjB,eAACF,EAAA,EAAD,CAAKhI,UAAU,OAAf,UACI,cAACiI,EAAA,EAAD,CAAKC,GAAG,IAAR,uBACA,cAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACM,EAAA,EAAD,CAAOC,SAAUxB,EAAWyB,KAAK,SAAjC,SACK3I,EAAM4I,WAAWnE,KAAI,SAAAoE,GAAC,OAAI,wBAAQC,MAAOD,EAAf,SAAmBA,cAI1D,eAACZ,EAAA,EAAD,CAAKhI,UAAU,OAAf,UACI,cAACiI,EAAA,EAAD,CAAKC,GAAG,IAAR,wBACA,cAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACM,EAAA,EAAD,CAAOC,SAAUvB,EAAYwB,KAAK,SAAlC,SACK,CAAC,KAAM,IAAK,KAAM,IAAK,MAAMlE,KAAI,SAAAoE,GAAC,OAAI,wBAAQC,MAAOD,EAAf,SAAmBA,cAItE,eAACZ,EAAA,EAAD,CAAKhI,UAAU,YAAf,UACI,cAACiI,EAAA,EAAD,CAAKC,GAAG,IAAR,uBACA,cAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACM,EAAA,EAAD,CAAOC,SAAUtB,EAAWuB,KAAK,OAAOI,YAAa,qCAG7D,cAACd,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACI,cAACa,EAAA,EAAD,CAAQC,OAAK,EAAC3H,QAjDZ,WACd,IAAM8D,EAAO8B,EAAUgC,QAAQJ,MACzBK,EAAOhC,EAAW+B,QAAQJ,MAC1BM,EAAQhC,EAAU8B,QAAQJ,MAChC,GAAoB,GAAhBM,EAAM9G,OAAV,CACA,IAAM+F,EAAI,IAAIpB,EAAO7B,EAAM+D,EAAMC,GACjCpJ,EAAMqJ,UAAUhB,KA2CJ,gCC1BLiB,EA7Bc,SAAAtJ,GAAS,MAEJa,mBAAS,IAFL,mBAE3BuH,EAF2B,KAElBmB,EAFkB,KAG5BC,EAAgB,WAClB,IADwB,EACpBnH,EAAOrC,EAAMqC,KADO,cAEV+F,GAFU,IAExB,2BAAuB,CACnB/F,EADmB,QACVoF,OAAOpF,IAHI,8BAKxB,OAAOA,GAUX,OACI,eAAC4F,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIlI,UAAU,sBAAtB,UACI,cAAC,EAAD,CAAkBoC,KAAMmH,MACxB,cAAC,EAAD,CAAiBnH,KAAMmH,SAE3B,cAACtB,EAAA,EAAD,CAAKC,GAAG,IAAIlI,UAAU,gBAAtB,SACI,cAAC,EAAD,CAAiBmI,QAASA,EAASiB,UAf7B,SAAC5B,GACf8B,EAAW,GAAD,mBAAKnB,GAAL,CAAcX,MAcyCc,aAXhD,SAACd,GAClB8B,EAAWnB,EAAQX,QAAO,SAAAgC,GAAG,OAAIhC,GAAUgC,OAUkDjB,WAAYgB,IAAgBlH,OAAQsG,WAAY5I,EAAM4I,mBC8F5Ic,EAtHE,SAAA1J,GAAU,IAAD,EACTa,mBAAS4B,KAAfC,EADe,sBAEU7B,mBAAS,IAFnB,mBAEfmC,EAFe,KAEL2G,EAFK,OAGU9I,mBAAS,MAHnB,gCAIkBA,mBAAS,KAJ3B,mBAIf+I,EAJe,KAIDC,EAJC,KA4GtB,OA3CAjH,qBAAU,WACNkH,IAAKC,MAAM,0BAA2B,CAClCC,UAAU,EACVC,QAAQ,EACRC,eAAe,EACfC,SAAU,SAAUC,EAASC,GACzBV,EAAYS,EAAQ/H,WAG7B,IAEHO,qBAAU,WACNC,SAASC,eAAeJ,GAAIK,UAAY,GACxC,IAAMV,EAjEU,SAACA,EAAMiI,GACvB,IADkC,EAC9BtH,EAAWX,EAAKY,QAChB,SAACC,EAAUC,GAAX,OAAiBD,EAASE,IAAID,EAAE,kBAAf,sBAAsCD,EAASG,IAAIF,EAAE,oBAAsB,IAA3E,CAA+EA,OAChG,IAAIG,KAGJC,EAAc,GANgB,cAQpBP,EAASS,QARW,yBAQzBC,EARyB,QASxB6G,EAAUvH,EAASK,IAAIK,GAEvB8G,GAAWD,EAAQtH,QAAO,SAACe,EAAOC,GAAR,OAAiBD,EAAQC,EAAI,cAAiB,GAAKsG,EAAQjI,QAAQ4B,QAAQ,GAAK,SAC1GuG,GAAiBF,EAAQtH,QAAO,SAACe,EAAOC,GAAR,OAAiBD,EAAQC,EAAK,qCAAoC,GAAKsG,EAAQjI,QAAQ4B,QAAQ,GAC/HwG,GAAkBH,EAAQtH,QAAO,SAACe,EAAOC,GAAR,OAAiBD,EAAQC,EAAK,yBAAwB,GAAKsG,EAAQjI,QAAQ4B,QAAQ,GACpHyG,GAAeJ,EAAQtH,QAAO,SAACe,EAAOC,GAAR,OAAiBD,EAAQC,EAAI,WAAc,GAAKsG,EAAQjI,QAAQ4B,QAAQ,GACtGM,EAAW+F,EAAQ9F,KAAI,SAAAE,GAAC,OAAIA,EAAC,SAAW1B,QAAO,SAACoB,EAAGC,GAAJ,OAAUD,EAAIC,EAAID,EAAIC,IAAG,GAAK,IAE/EsG,OAAO,EACPC,EAAKP,EAAO7C,QAAO,SAAAqD,GAAC,OAAIA,EAAC,UAAgBpH,KAEzCkH,EADAC,EAAGvI,OAAS,EACFuI,EAAG,GAEF,CAAC,GAAM,GAAI,GAAM,IAEhC,IAAMlH,EAAM,CAAC,iBAAkBD,EAC3B,EAAKkH,EAAO,EACZ,EAAKA,EAAO,EACZ,YAAeJ,EACf,kCAAmCC,EACnC,sBAAuBC,EACvB,SAAYC,EACZ,aAAgBnG,GAEduG,EAxCS,SAAC1I,GACpB,QAAIA,EAAI,YAAkB,OACtBA,EAAI,SAAe,OACnBA,EAAK,uBAAyB,GAqCf2I,CAAerH,GAC9BA,EAAI,mBAAqBoH,EACzBxH,EAAYY,KAAKR,IA3BrB,2BAAgC,IARE,8BAwClC,OAHAJ,EAAYa,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE,kBAAoBC,EAAE,kBAAqB,GAAK,KAE9EuF,EAAgBtG,GACTA,EAyBMgB,CAAYvE,EAAMqC,KAAMW,GACrC4B,QAAQC,IAAI,OAAQxC,GAEpB,IALY,EAKR4C,EAAMC,IAAA,WAAcxC,IACnByC,OAAO,OACPC,KAAK,QAAS,KACdA,KAAK,SAAU,MARR,cAUE/C,GAVF,yBAUHqB,EAVG,SAWJuH,EAAOpI,SAASqI,cAAc,SAC7BC,aAAa,QAAS,UAC3BF,EAAKE,aAAa,QAAS,WAAazH,EAAE,mBACtC4G,EAAS5G,EAAC,EAAQ,IAAMA,EAAC,EAAQ,MACrCuH,EAAKE,aAAa,SAAUb,GAC5BW,EAAKE,aAAa,OAAQ,2BAA6BzH,EAAE,kBAAmB,OAI5EuB,EAAIE,OAAO,UACNC,KAAK,KAAM,WAAa1B,EAAE,mBAC1B0B,KAAK,QAAS,kBACdA,KAAK,KAAM1B,EAAC,GACZ0B,KAAK,KAAM1B,EAAC,GACZ0B,KAAK,IAAK,KAEVsB,GAAG,SAAS,kBA/CN,SAAChE,GAChB,IAAM0H,EAAUR,EAAanC,QAAO,SAAA5D,GAAC,OAAIA,EAAE,mBAAqBnB,KAChE,GAAsB,GAAlB0H,EAAQ9H,OAAZ,CACA,IAAM8I,EAAShB,EAAQ,UAChBgB,EAAM,SACNA,EAAM,EACbpL,EAAMqL,OAAOjB,EAAQ,KAyCMkB,CAAW5H,EAAE,sBAC/B0B,KAAK,OAAQ1B,EAAE,mBAAqB,QAAU,QAlBvD,2BAAoB,CAAC,IACbuH,EAGAX,EAJY,KAVR,iCA8Bb,CAACtK,EAAMqC,KAAMW,IAGZ,gCACI,mDACA,iMACA,uBAAK,uBACL,qBAAKN,GAAIA,EAAI+D,MAAO,CAAC,WAAc,gCClEhC8E,EAlDM,SAAAvL,GAAS,MAEIa,mBAAS,IAFb,mBAEnBuH,EAFmB,KAEVmB,EAFU,KAGpBC,EAAgB,WAClB,IADwB,EACpBnH,EAAOrC,EAAMqC,KADO,cAEV+F,GAFU,IAExB,2BAAuB,CACnB/F,EADmB,QACVoF,OAAOpF,IAHI,8BAKxB,OAAOA,GARe,EAkBMxB,mBAAS,IAlBf,mBAkBnBiD,EAlBmB,KAkBT0H,EAlBS,KAoB1B,OACI,eAACvD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAIlI,UAAU,sBAAtB,SACI,cAAC,EAAD,CAAUoC,KAAMmH,IAAiB6B,OAAQ,SAAChJ,GAAD,OAAUmJ,EAAYnJ,QAEnE,eAAC6F,EAAA,EAAD,CAAKC,GAAG,IAAIlI,UAAU,gBAAtB,UACI,cAAC,EAAD,CAAiBmI,QAASA,EAASiB,UAhB7B,SAAC5B,GACf8B,EAAW,GAAD,mBAAKnB,GAAL,CAAcX,MAeyCc,aAZhD,SAACd,GAClB8B,EAAWnB,EAAQX,QAAO,SAAAgC,GAAG,OAAIhC,GAAUgC,OAWkDjB,WAAYgB,IAAgBlH,OAAQsG,WAAY5I,EAAM4I,aAC3I,gCACI,uBACA,qEACA,kCACI,gCACA,+BACI,yCACA,4CAGJ,gCACC6C,OAAOhI,KAAKK,GAAUW,KAAI,SAAAiH,GAAC,OACxB,+BACI,6BAAKA,IACL,6BAAK5H,EAAS4H,GAAGlE,kCCFlCmE,EAhCH,WAAO,IAAD,EACU9K,mBAAS,IADnB,mBACPwB,EADO,KACDuJ,EADC,OAEsB/K,mBAAS,IAF/B,mBAEP+H,EAFO,KAEKiD,EAFL,OAGgBhL,oBAAS,GAHzB,mBAGPR,EAHO,KAGEyL,EAHF,KAkBd,OAdAlJ,qBAAU,WACNkH,IAAKC,MAAM,qBAAsB,CAC7BC,UAAU,EACVC,QAAQ,EACRC,eAAe,EACfC,SAAU,SAAUC,EAASC,GACzB,IAAI0B,EAAS3B,EAAQ/H,KAAKoC,KAAI,SAAAuH,GAAM,OAAO,2BAAIA,GAAX,IAAc,UAAa1E,IAAO0E,EAAC,WAAezE,cACtFwE,EAAOE,MACPL,EAAQG,GACRF,EAAcJ,OAAOhI,KAAKsI,EAAO,KACjCD,GAAW,QAGpB,IAEC,qCACI,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,CAAa/J,KAAMA,EAAMhC,QAASA,OAEtE,eAAC,EAAD,WACI,cAAC,IAAD,CAAO6L,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAM,cAAC,EAAD,CAAS/J,KAAMA,OAC1D,cAAC,IAAD,CAAO6J,OAAK,EAACC,KAAK,MAAMC,OAAQ,kBAAM,cAAC,EAAD,CAAsB/J,KAAMA,EAAMuG,WAAYA,OACpF,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,OAAOC,OAAQ,kBAAM,cAAC,EAAD,CAAc/J,KAAMA,EAAMuG,WAAYA,cCzB9EyD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASV,OACL,cAAC,IAAMW,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRlK,SAASC,eAAe,SAM5BuJ,O","file":"static/js/main.f49de29b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/diver.104dad2c.png\";","import React from 'react'\nimport logo from \"./diver.png\";\nimport { Link } from 'react-router-dom';\nimport ClockLoader from \"react-spinners/ClockLoader\";\n\nexport const StartScreen = (props) => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    San Francisco Bay <code>diving</code> decision support system.\n                </p>\n                {props.loading ? <><small>Please wait while the CSV-File is parsed...</small><br/><ClockLoader css=\"margin: 0 auto;\"/></> :\n                <Link to=\"/welcome\" className=\"btn btn-danger\">Enter Page and see visualizations</Link>}\n                <div className=\"attribution\">Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n            </header>\n        </div>\n    )\n}","let lastId = 0;\n\nexport default function(prefix='id') {\n    lastId++;\n    return `${prefix}${lastId}`;\n}","import React, {useState} from 'react'\nimport {\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavLink,\n    DropdownMenu,\n    DropdownItem,\n    NavbarToggler,\n    Collapse,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Nav\n} from \"reactstrap\";\n\nconst Layout = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"#/\">Scuba Diving Support</NavbarBrand>\n                <NavbarToggler onClick={toggle}/>\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink href=\"#/welcome\">Home</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"#/dt\">Depth-Temperature</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"#/map\">Diving-Spot Guide</NavLink>\n                        </NavItem>\n                    </Nav>\n                    <UncontrolledDropdown navbar>\n                        <DropdownToggle nav>\n                            Group 14\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem>\n                                <strong>Members</strong>\n                            </DropdownItem>\n                            <DropdownItem divider/>\n                            <DropdownItem>\n                                Simone Andreetto\n                            </DropdownItem>\n                            <DropdownItem>\n                                Christoph Götz\n                            </DropdownItem>\n                            <DropdownItem>\n                                Felix Winterleitner\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </Collapse>\n            </Navbar>\n            <div className=\"container\">\n            {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport ClockLoader from 'react-spinners/ClockLoader'\n\nconst Welcome = props => {\n    return (\n        <div>\n            <h1>Welcome to the Diving Support System Visualization Page</h1>\n            <p>Here, our sample visualizations for the use case of scuba diving in the San Francisco Bay area are\n                presented.</p>\n            <p>The dataset in use can be obtained from: <a href=\"infovis2/SFBay.csv\">SFBay.csv</a></p>\n            <p>It consists of {props.data.length} data entries recorded from {props.data[0]['TimeStamp'].toLocaleDateString(\"de-DE\")} to {props.data[props.data.length - 1]['TimeStamp'].toLocaleDateString(\"de-DE\")} in the San Francisco Bay area.</p>\n        </div>\n    )\n}\n\nexport default Welcome","import React, {useEffect, useState} from 'react'\nimport * as d3 from 'd3'\nimport tip from 'd3-tip'\nimport idgen from \"../utils/idgen\";\n\nexport const DepthTemperature = (props) => {\n    const [id] = useState(idgen());\n    const [graphic, setGraphic] = useState(null)\n    const prepareData = (data) => {\n        let stations = data.reduce(\n            (entryMap, e) => entryMap.set(e['Station.Number'], [...entryMap.get(e['Station.Number']) || [], e]),\n            new Map()\n        );\n\n        let reducedData = []\n        let dataList = []\n\n        for (let s of stations.keys()) {\n            const res = {\"Station.Number\": s, \"Measures\": []}\n            const entries = stations.get(s)\n            let depths = entries.reduce(\n                (entryMap, e) => entryMap.set(e['Depth'], [...entryMap.get(e['Depth']) || [], e]),\n                new Map()\n            );\n            for (let d of depths.keys()) {\n                const measures = depths.get(d)\n                const avg = (measures.reduce((total, next) => total + next['Temperature'], 0) / measures.length).toFixed(1)\n                res['Measures'].push({\"Depth\": d, \"Temperature\": avg})\n                dataList.push({\"Station.Number\": s, \"Depth\": d, \"Temperature\": avg}\n                )\n            }\n            res['Measures'].sort((a, b) => (a['Depth'] > b['Depth']) ? -1 : 1);\n            reducedData.push(res)\n        }\n        reducedData.sort((a, b) => (a['Station.Number'] > b['Station.Number']) ? 1 : -1);\n\n        return reducedData\n    }\n\n    useEffect(() => {\n        document.getElementById(id).innerHTML = \"\"\n        const data = prepareData(props.data)\n        const depths = data.map(d => d['Measures']).reduce((a, b) => a.concat(b), []).map(m => m['Depth'])\n        const maxDepth = depths.reduce((a, b) => a > b ? a : b, 0)\n        console.log(\"Data\", data)\n\n        // set the dimensions and margins of the graph\n        var margin = {top: 40, right: 20, bottom: 20, left: 40},\n            width = props.width - margin.left - margin.right,\n            height = props.height - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        const svg = d3.select(`#${id}`)\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        var colorScale = d3.scaleSequential(d3.interpolateRdYlBu)\n            .domain([30, 0]);\n\n        // x axis\n        var x = d3.scaleBand()\n            .domain(data.map(d => d['Station.Number']))\n            .range([0, width])\n            .padding([0.3])\n        svg.append(\"g\")\n            .call(d3.axisTop(x).tickSizeOuter(0));\n\n        // x axis label\n        svg.append(\"text\")\n            .attr(\"class\", \"x label\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", width)\n            .attr(\"y\", -20)\n            .text(\"Station Number\");\n\n        // y axis\n        var y = d3.scaleLinear()\n            .domain([maxDepth, 0])\n            .range([height, 0]);\n        svg.append(\"g\")\n            .call(d3.axisLeft(y));\n\n        //y axis label\n        svg.append(\"text\")\n            .attr(\"class\", \"y label\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", -height + 50)\n            .attr(\"y\", -35)\n            .attr(\"dy\", \".75em\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .text(\"Depth\");\n\n        // tooltip\n        let t = tip().attr('class', 'd3-tip')\n            .html(function(d) { const dat = d.toElement.__data__; return dat['Depth'] + \"m: \" + dat['Temperature'] + \"°C\" ; }).offset([20, 0]);\n        svg.call(t);\n\n        // bar groups\n        var bar = svg.append(\"g\").selectAll(\"g\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .attr(\"transform\", function (d, i) {\n                return \"translate(\" + x(d['Station.Number']) + \", 0)\";\n            });\n\n        // bars\n        bar.selectAll(\"rect\")\n            .data(d => d['Measures'])\n            .enter()\n            .append(\"rect\")\n            .attr(\"y\", 1)\n            .attr(\"height\", function (d) {\n                return y(d['Depth']);\n            })\n            .attr(\"width\", x.bandwidth())\n            .style(\"fill\", function (d) {\n                return colorScale(d['Temperature']);\n            })\n            .on('mouseover', t.show)\n            .on('mouseout', t.hide);\n\n        setGraphic(svg)\n    }, [props.data])\n    return (\n        <div>\n            <h3>Temperature averages by station and depth</h3>\n            <div id={id}></div>\n        </div>\n    )\n}\n\nDepthTemperature.defaultProps = {width: 700, height: 500}\n","import React, {useEffect, useState} from 'react'\nimport * as d3 from 'd3'\nimport tip from 'd3-tip'\nimport idgen from \"../utils/idgen\";\n\nexport const DateTemperature = (props) => {\n    const [id] = useState(idgen());\n    const [graphic, setGraphic] = useState(null)\n\n    const prepareData = (data) => {\n        return data\n    }\n    useEffect(() => {\n        document.getElementById(id).innerHTML = \"\"\n        const data = prepareData(props.data)\n\n        // set the dimensions and margins of the graph\n        var margin = {top: 40, right: 20, bottom: 20, left: 40},\n            width = props.width - margin.left - margin.right,\n            height = props.height - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        const svg = d3.select(`#${id}`)\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // var colorScale = d3.scaleSequential(d3.interpolateRdYlBu)\n        //     .domain([30, 0]);\n\n        // x axis\n        var x = d3.scaleBand()\n            .domain(data.map(d => d['TimeStamp']))\n            .range([0, width])\n            .padding([0.3])\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x))\n        ;\n\n\n        // y axis\n        var y = d3.scaleLinear()\n            .domain([0, d3.max(data, function(d) { return + d.Temperature; })])\n            .range([height, 0]);\n        svg.append(\"g\")\n            .call(d3.axisLeft(y));\n\n        //y axis label\n        svg.append(\"text\")\n            .attr(\"class\", \"y label\")\n            .attr(\"text-anchor\", \"center\")\n            .attr(\"x\", -height + 50)\n            .attr(\"y\", -35)\n            .attr(\"dy\", \".75em\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .text(\"Temperature\");\n\n        // tooltip\n/*        let t = tip().attr('class', 'd3-tip')\n            .html(function(d) { const dat = d.toElement.__data__; return dat['Depth'] + \"m: \" + dat['Temperature'] + \"°C\" ; }).offset([20, 0]);\n        svg.call(t);*/\n\n        // Add the line\n        svg.append(\"path\")\n            .datum(data)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", d3.line()\n                .x(function(d) { return x(d['TimeStamp']) })\n                .y(function(d) { return y(d['Temperature']) })\n            )\n\n        setGraphic(svg)\n    }, [props.data])\n    return (\n        <div className=\"mt-5\">\n            <h3>Temperature measurements over time</h3>\n            <small>Select only one station and depth for meaningful results!</small>\n            <div id={id}></div>\n        </div>\n    )\n}\n\nDateTemperature.defaultProps = {width: 700, height: 500}\n","import moment from 'moment'\n\nclass Filter {\n    constructor(attribute, comparator, threshold) {\n        this.attribute = attribute\n        this.comparator = comparator\n        this.threshold = threshold\n        if (attribute == \"TimeStamp\") {\n            this.threshold = moment(threshold).toDate()\n        }\n    }\n\n    toString () {\n        if (this.attribute == \"TimeStamp\") {\n            return this.attribute + \" \" + this.comparator + \" \" + this.threshold.toLocaleDateString(\"de-DE\");\n        }\n        return this.attribute + \" \" + this.comparator + \" \" + this.threshold.toString();\n    }\n\n    filter(data) {\n        switch (this.comparator) {\n            case \"=\":\n            case \"==\":\n                if (this.attribute == \"TimeStamp\")\n                    return data.filter(d => sameDay(d[this.attribute], this.threshold))\n                return data.filter(d => d[this.attribute] == this.threshold)\n            case \"<\":\n                return data.filter(d => d[this.attribute] < this.threshold)\n            case \"<=\":\n                return data.filter(d => d[this.attribute] <= this.threshold)\n            case \">\":\n                return data.filter(d => d[this.attribute] > this.threshold)\n            case \">=\":\n                return data.filter(d => d[this.attribute] >= this.threshold)\n        }\n    }\n}\n\nfunction sameDay(d1, d2) {\n    return d1.getFullYear() === d2.getFullYear() &&\n        d1.getMonth() === d2.getMonth() &&\n        d1.getDate() === d2.getDate();\n}\n\nexport default Filter","import React, {useEffect, useRef, useState} from \"react\";\nimport {Badge, Button, Col, Input, Row} from \"reactstrap\";\nimport Filter from \"../utils/filter\";\n\nconst FilterComponent = props => {\n    const attribute = useRef(null)\n    const comparator = useRef(null)\n    const threshold = useRef(null)\n\n    const removeFilter = (filter) =>  {\n        props.removeFilter(filter)\n    }\n\n    const addFilter = () => {\n        const attr = attribute.current.value\n        const comp = comparator.current.value\n        const thres = threshold.current.value\n        if (thres.length == 0) return\n        const f = new Filter(attr, comp, thres)\n        props.addFilter(f)\n    }\n\n    return (\n        <div className=\"control-panel\">\n            <Row>\n                <Col xs=\"12\"><strong>Filters</strong><small> (click to remove)</small></Col>\n                <Col xs=\"12\">\n                    {props.filters.map(f => <Badge className=\"m-1\" color=\"success\"\n                                             onClick={() => removeFilter(f)}>{f.toString()}</Badge>)}\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\"pl-3\"><small>{props.matchCount} rows match filters.</small></Col>\n            </Row>\n            <hr/>\n            <Row>\n                <Col xs=\"12\"><strong>Add Filter</strong></Col>\n            </Row>\n            <Row className=\"mt-1\">\n                <Col xs=\"3\">Attribute</Col>\n                <Col xs=\"9\">\n                    <Input innerRef={attribute} type=\"select\">\n                        {props.attributes.map(o => <option value={o}>{o}</option>)}\n                    </Input>\n                </Col>\n            </Row>\n            <Row className=\"mt-1\">\n                <Col xs=\"3\">Comparator</Col>\n                <Col xs=\"9\">\n                    <Input innerRef={comparator} type=\"select\">\n                        {[\"==\", \"<\", \"<=\", \">\", \">=\"].map(o => <option value={o}>{o}</option>)}\n                    </Input>\n                </Col>\n            </Row>\n            <Row className=\"mt-1 mb-2\">\n                <Col xs=\"3\">Threshold</Col>\n                <Col xs=\"9\">\n                    <Input innerRef={threshold} type=\"text\" placeholder={\"[for dates use: yyyy-mm-dd]\"}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs=\"12\">\n                    <Button block onClick={addFilter}>Add\n                        Filter</Button>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default FilterComponent","import React, {useState, useRef} from 'react'\nimport {DepthTemperature} from \"../visualizations/DepthTemperature\";\nimport {DateTemperature} from \"../visualizations/DateTemperature\";\nimport {Row, Col, Badge, Button, Input, Label} from \"reactstrap\";\nimport Filter from \"../utils/filter\";\nimport FilterComponent from \"../filtering/FilterComponent\";\n\nconst DepthTemperaturePage = props => {\n    // holds list of filter functions\n    const [filters, setFilters] = useState([])\n    const filtered_data = () => {\n        let data = props.data\n        for (let f of filters) {\n            data = f.filter(data)\n        }\n        return data\n    }\n    const addFilter = (filter) => {\n        setFilters([...filters, filter])\n    }\n\n    const removeFilter = (filter) => {\n        setFilters(filters.filter(fil => filter != fil))\n    }\n\n    return (\n        <Row>\n            <Col xs=\"8\" className=\"visualization-panel\">\n                <DepthTemperature data={filtered_data()}/>\n                <DateTemperature data={filtered_data()}/>\n            </Col>\n            <Col xs=\"4\" className=\"control-panel\">\n                <FilterComponent filters={filters} addFilter={addFilter} removeFilter={removeFilter} matchCount={filtered_data().length} attributes={props.attributes}/>\n            </Col>\n        </Row>)\n}\nexport default DepthTemperaturePage\n\n","import React, {useState, useEffect}  from 'react'\nimport idgen from \"../utils/idgen\";\nimport * as d3 from \"d3\";\nimport tip from \"d3-tip\";\nimport papa from \"papaparse\";\nimport moment from \"moment\";\n\n\nconst MapGuide = props => {\n    const [id] = useState(idgen());\n    const [stations, setStations] = useState([])\n    const [selected, setSelected] = useState(null)\n    const [preparedData, setPreparedData] = useState([])\n\n    const calculateScore = (data) => {\n        if (data['Temperature'] < 14) return false\n        if (data['Salinity'] > 28) return false\n        if (data['Optical.Backscatter'] > 6) return false\n        return true\n    }\n\n    const prepareData = (data, coords) => {\n        let stations = data.reduce(\n            (entryMap, e) => entryMap.set(e['Station.Number'], [...entryMap.get(e['Station.Number']) || [], e]),\n            new Map()\n        );\n\n        let reducedData = []\n\n        for (let s of stations.keys()) {\n            const entries = stations.get(s)\n\n            const avgTemp = (entries.reduce((total, next) => total + next['Temperature'], 0) / entries.length).toFixed(1) + \" °C\"\n            const avgExtinction = (entries.reduce((total, next) => total + next['Measured.Extinction.Coefficient'], 0) / entries.length).toFixed(3)\n            const avgBackscatter = (entries.reduce((total, next) => total + next['Optical.Backscatter'], 0) / entries.length).toFixed(3)\n            const avgSalinity = (entries.reduce((total, next) => total + next['Salinity'], 0) / entries.length).toFixed(3)\n            const maxDepth = entries.map(m => m['Depth']).reduce((a, b) => a > b ? a : b, 0) + \"m\"\n\n            let station\n            let st = coords.filter(c => c['station'] === s)\n            if (st.length > 0) {\n                station = st[0]\n            }\n            else station = {\"x\": -10, \"y\": -10}\n\n            const res = {\"Station.Number\": s,\n                \"x\": station['x'],\n                \"y\": station['y'],\n                \"Temperature\": avgTemp,\n                \"Measured.Extinction.Coefficient\": avgExtinction,\n                \"Optical.Backscatter\": avgBackscatter,\n                \"Salinity\": avgSalinity,\n                \"MaximumDepth\": maxDepth\n            }\n            const isGood = calculateScore(res)\n            res['Good.DivingSpot'] = isGood\n            reducedData.push(res)\n        }\n        reducedData.sort((a, b) => (a['Station.Number'] > b['Station.Number']) ? 1 : -1);\n\n        setPreparedData(reducedData)\n        return reducedData\n    }\n\n    const notifyData = (id) => {\n        const results = preparedData.filter(d => d['Station.Number'] == id)\n        if (results.length == 0) return\n        const result = results[0]\n        delete result['x']\n        delete result['y']\n        props.notify(results[0])\n    }\n\n    useEffect(() => {\n        papa.parse(\"infovis2/img_coords.csv\", {\n            download: true,\n            header: true,\n            dynamicTyping: true,\n            complete: function (results, file) {\n                setStations(results.data)\n            }\n        })\n    }, [])\n\n    useEffect(() => {\n        document.getElementById(id).innerHTML = \"\"\n        const data = prepareData(props.data, stations)\n        console.log(\"Data\", data)\n\n        var svg = d3.select(`#${id}`)\n            .append(\"svg\")\n            .attr(\"width\", 730)\n            .attr(\"height\", 1053);\n        // loop through stations\n        for (let s of data) {\n            var area = document.createElement('area');\n            area.setAttribute('shape', 'circle');\n            area.setAttribute('title', 'Station ' + s['Station.Number']);\n            var coords = s['x'] + ',' + s['y'] + ',10';\n            area.setAttribute('coords', coords);\n            area.setAttribute('href', 'javascript:showStation(\"' + s['Station.Number']+ '\");');\n            // add area to imagemap\n            // image_map.appendChild(area);\n            // add rectangular\n            svg.append(\"circle\")\n                .attr(\"id\", \"station-\" + s['Station.Number'])\n                .attr(\"class\", \"station-circle\")\n                .attr(\"cx\", s['x'])\n                .attr(\"cy\", s['y'])\n                .attr(\"r\", \"5\")\n                //.on(\"click\", setSelected(s['Station.Number']))\n                .on(\"click\", () => notifyData(s['Station.Number']))\n                .attr(\"fill\", s['Good.DivingSpot'] ? \"green\" : \"red\")\n        }\n    }, [props.data, stations])\n\n    return (\n        <div>\n            <h3>Diving Spot Guide</h3>\n            <small>Based on the values obtained by clicking the measurement point, diving spots are either categorized as good or bad. Good spots are green, bad spots are red!</small>\n            <br/><br/>\n            <div id={id} style={{\"background\": \"url(infovis2/bay.jpeg)\"}}/>\n        </div>\n    )\n}\n\nexport default MapGuide","import React, {useState} from 'react'\nimport MapGuide from \"../visualizations/MapGuide\";\nimport {Row, Col} from \"reactstrap\";\nimport FilterComponent from \"../filtering/FilterComponent\";\n\nconst MapGuidePage = props => {\n    // holds list of filter functions\n    const [filters, setFilters] = useState([])\n    const filtered_data = () => {\n        let data = props.data\n        for (let f of filters) {\n            data = f.filter(data)\n        }\n        return data\n    }\n    const addFilter = (filter) => {\n        setFilters([...filters, filter])\n    }\n\n    const removeFilter = (filter) => {\n        setFilters(filters.filter(fil => filter != fil))\n    }\n\n    const [measures, setMeasures] = useState({})\n\n    return (\n        <Row>\n            <Col xs=\"8\" className=\"visualization-panel\">\n                <MapGuide data={filtered_data()} notify={(data) => setMeasures(data)}/>\n            </Col>\n            <Col xs=\"4\" className=\"control-panel\">\n                <FilterComponent filters={filters} addFilter={addFilter} removeFilter={removeFilter} matchCount={filtered_data().length} attributes={props.attributes}/>\n                <div>\n                    <hr/>\n                    <h4>Average measures for last selection</h4>\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>Measure</th>\n                            <th>Value</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {Object.keys(measures).map(k =>\n                            <tr>\n                                <td>{k}</td>\n                                <td>{measures[k].toString()}</td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n            </Col>\n        </Row>)\n}\nexport default MapGuidePage\n\n","import './App.css';\nimport React, {useEffect, useState} from 'react'\nimport {Route} from 'react-router';\nimport {StartScreen} from \"./StartScreen.js\";\nimport {Test} from \"./visualizations/Test\";\nimport papa from \"papaparse\";\nimport Layout from \"./Layout\";\nimport Welcome from \"./pages/Welcome\";\nimport moment from 'moment'\nimport DepthTemperaturePage from \"./pages/DepthTemperaturePage\";\nimport MapGuidePage from \"./pages/MapGuidePage\";\n\nconst App = () => {\n    const [data, setData] = useState([])\n    const [attributes, setAttributes] = useState([])\n    const [loading, setLoading] = useState(true)\n    useEffect(() => {\n        papa.parse(\"infovis2/SFBay.csv\", {\n            download: true,\n            header: true,\n            dynamicTyping: true,\n            complete: function (results, file) {\n                let parsed = results.data.map(r => {return {...r, 'TimeStamp': moment(r['TimeStamp']).toDate()}})\n                parsed.pop()\n                setData(parsed)\n                setAttributes(Object.keys(parsed[0]))\n                setLoading(false)\n            }\n        })\n    }, [])\n    return (\n        <>\n            <Route exact path=\"/\" render={() => <StartScreen data={data} loading={loading}/>}/>\n\n            <Layout>\n                <Route exact path=\"/welcome\" render={() => <Welcome data={data}/>}/>\n                <Route exact path=\"/dt\" render={() => <DepthTemperaturePage data={data} attributes={attributes}/>}/>\n                <Route exact path=\"/map\" render={() => <MapGuidePage data={data} attributes={attributes}/>}/>\n            </Layout>\n\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}