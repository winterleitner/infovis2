{"version":3,"sources":["logo.svg","StartScreen.js","utils/idgen.js","visualizations/Test.js","Layout.js","pages/Welcome.js","visualizations/DepthTemperature.js","utils/filter.js","pages/DepthTemperaturePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartScreen","props","className","src","logo","alt","loading","css","to","lastId","prefix","Test","useState","idgen","id","useEffect","d3","append","attr","width","height","selectAll","data","enter","d","i","defaultProps","Layout","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","nav","DropdownMenu","right","DropdownItem","divider","children","Welcome","length","toLocaleDateString","DepthTemperature","setGraphic","svg","Filter","attribute","comparator","threshold","this","moment","toDate","toString","filter","DepthTemperaturePage","filters","setFilters","useRef","filtered_data","Row","Col","xs","map","f","Badge","fil","Input","innerRef","type","attributes","o","value","placeholder","Button","block","current","comp","thres","addFilter","App","setData","setAttributes","setLoading","papa","parse","download","header","dynamicTyping","complete","results","file","parsed","r","pop","Object","keys","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a2d0d3e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from \"./logo.svg\";\nimport { Link } from 'react-router-dom';\nimport ClockLoader from \"react-spinners/ClockLoader\";\n\nexport const StartScreen = (props) => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Nuclear <code>diving</code> decision support system.\n                </p>\n                {props.loading ? <><small>Please wait while the CSV-File is parsed...</small><br/><ClockLoader css=\"margin: 0 auto;\"/></> :\n                <Link to=\"/welcome\" className=\"btn btn-danger\">Enter Page and see visualizations</Link>}\n            </header>\n        </div>\n    )\n}","let lastId = 0;\n\nexport default function(prefix='id') {\n    lastId++;\n    return `${prefix}${lastId}`;\n}","import React, {useEffect, useState} from 'react'\nimport * as d3 from 'd3'\nimport idgen from \"../utils/idgen\";\n\nexport const Test = (props) => {\n    const [id] = useState(idgen());\n    useEffect(() => {\n        const data = [12, 5, 6, 6, 9, 10];\n        const svg = d3.select(`#${id}`).append(\"svg\").attr(\"width\", props.width).attr(\"height\", props.height);\n        svg.selectAll(\"rect\")\n            .data(data)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", (d, i) => i * 70)\n            .attr(\"y\", 0)\n            .attr(\"width\", 25)\n            .attr(\"height\", (d, i) => d*10)\n            .attr(\"fill\", \"green\");\n        },[])\n\n\n    return (\n        <div id={id}></div>\n    )\n}\n\nTest.defaultProps = {width: 700, height: 300}\n","import React, {useState} from 'react'\nimport {\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavLink,\n    DropdownMenu,\n    DropdownItem,\n    NavbarToggler,\n    Collapse,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Nav\n} from \"reactstrap\";\n\nconst Layout = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/#/\">Scuba Diving Support</NavbarBrand>\n                <NavbarToggler onClick={toggle}/>\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink href=\"/#/welcome\">Home</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"/#/dt\">Depth-Temperature</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"/#/vis\">Vis</NavLink>\n                        </NavItem>\n                    </Nav>\n                    <UncontrolledDropdown navbar>\n                        <DropdownToggle nav>\n                            Group 14\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem>\n                                <strong>Members</strong>\n                            </DropdownItem>\n                            <DropdownItem divider/>\n                            <DropdownItem>\n                                Simone Andreetto\n                            </DropdownItem>\n                            <DropdownItem>\n                                Christoph Götz\n                            </DropdownItem>\n                            <DropdownItem>\n                                Felix Winterleitner\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </Collapse>\n            </Navbar>\n            <div className=\"container\">\n            {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport ClockLoader from 'react-spinners/ClockLoader'\n\nconst Welcome = props => {\n    return (\n        <div>\n            <h1>Welcome to the Diving Support System Visualization Page</h1>\n            <p>Here, our sample visualizations for the use case of scuba diving in the San Francisco Bay area are\n                presented.</p>\n            <p>The dataset in use can be obtained from: <a href=\"infovis2/SFBay.csv\">SFBay.csv</a></p>\n            <p>It consists of {props.data.length} data entries recorded from {props.data[0]['TimeStamp'].toLocaleDateString(\"de-DE\")} to {props.data[props.data.length - 1]['TimeStamp'].toLocaleDateString(\"de-DE\")} in the San Francisco Bay area.</p>\n        </div>\n    )\n}\n\nexport default Welcome","import React, {useEffect, useState} from 'react'\nimport * as d3 from 'd3'\nimport idgen from \"../utils/idgen\";\n\nexport const DepthTemperature = (props) => {\n    const [id] = useState(idgen());\n    const [graphic, setGraphic] = useState(null)\n    useEffect(() => {\n        const svg = d3.select(`#${id}`).append(\"svg\").attr(\"width\", props.width).attr(\"height\", props.height);\n        svg.selectAll(\"rect\")\n            .data(props.data)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", (d, i) => i * 70)\n            .attr(\"y\", 0)\n            .attr(\"width\", 25)\n            .attr(\"height\", (d, i) => d['Temperature'])\n            .attr(\"fill\", \"green\");\n        setGraphic(svg)\n    },[])\n    return (\n        <div id={id}></div>\n    )\n}\n\nDepthTemperature.defaultProps = {width: 700, height: 300}\n","import moment from 'moment'\n\nclass Filter {\n    constructor(attribute, comparator, threshold) {\n        this.attribute = attribute\n        this.comparator = comparator\n        this.threshold = threshold\n        if (attribute == \"TimeStamp\") {\n            this.threshold = moment(threshold).toDate()\n        }\n    }\n\n    toString () {\n        if (this.attribute == \"TimeStamp\") {\n            return this.attribute + \" \" + this.comparator + \" \" + this.threshold.toLocaleDateString(\"de-DE\");\n        }\n        return this.attribute + \" \" + this.comparator + \" \" + this.threshold.toString() + \"d\";\n    }\n\n    filter(data) {\n        switch (this.comparator) {\n            case \"=\":\n            case \"==\":\n                return data.filter(d => d[this.attribute] == this.threshold)\n            case \"<\":\n                return data.filter(d => d[this.attribute] < this.threshold)\n            case \"<=\":\n                return data.filter(d => d[this.attribute] <= this.threshold)\n            case \">\":\n                return data.filter(d => d[this.attribute] > this.threshold)\n            case \">=\":\n                return data.filter(d => d[this.attribute] >= this.threshold)\n        }\n    }\n}\n\nexport default Filter","import React, {useState, useRef} from 'react'\nimport {DepthTemperature} from \"../visualizations/DepthTemperature\";\nimport {Row, Col, Badge, Button, Input, Label} from \"reactstrap\";\nimport Filter from \"../utils/filter\";\n\nconst DepthTemperaturePage = props => {\n    // holds list of filter functions\n    const [filters, setFilters] = useState([])\n    const attribute = useRef(null)\n    const comparator = useRef(null)\n    const threshold = useRef(null)\n    const filtered_data = () => {\n        let data = props.data\n        for (let f of filters) {\n            data = f.filter(data)\n        }\n        return data\n    }\n    const addFilter = () => {\n        const attr = attribute.current.value\n        const comp = comparator.current.value\n        const thres = threshold.current.value\n        if (thres.length == 0) return\n        const f = new Filter(attr, comp, thres)\n        setFilters([...filters, f])\n    }\n    return (\n        <Row>\n            <Col xs=\"8\" className=\"visualization-panel\">\n                <DepthTemperature data={filtered_data()}/>\n            </Col>\n            <Col xs=\"4\" className=\"control-panel\">\n                <Row>\n                    <Col xs=\"12\"><strong>Filters</strong><small> (click to remove)</small></Col>\n                    <Col xs=\"12\">\n                        {filters.map(f => <Badge className=\"m-1\" color=\"success\"\n                                                 onClick={() => setFilters(filters.filter(fil => f != fil))}>{f.toString()}</Badge>)}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"pl-3\"><small>{filtered_data().length} rows match filters.</small></Col>\n                </Row>\n                <hr/>\n                <Row>\n                    <Col xs=\"12\"><strong>Add Filter</strong></Col>\n                </Row>\n                <Row className=\"mt-1\">\n                    <Col xs=\"3\">Attribute</Col>\n                    <Col xs=\"9\">\n                        <Input innerRef={attribute} type=\"select\">\n                            {props.attributes.map(o => <option value={o}>{o}</option>)}\n                        </Input>\n                    </Col>\n                </Row>\n                <Row className=\"mt-1\">\n                    <Col xs=\"3\">Comparator</Col>\n                    <Col xs=\"9\">\n                        <Input innerRef={comparator} type=\"select\">\n                            {[\"==\", \"<\", \"<=\", \">\", \">=\"].map(o => <option value={o}>{o}</option>)}\n                        </Input>\n                    </Col>\n                </Row>\n                <Row className=\"mt-1 mb-2\">\n                    <Col xs=\"3\">Threshold</Col>\n                    <Col xs=\"9\">\n                        <Input innerRef={threshold} type=\"text\" placeholder={\"[for dates use: yyyy-mm-dd]\"}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs=\"12\">\n                        <Button block onClick={() => addFilter()}>Add\n                            Filter</Button>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>)\n}\nexport default DepthTemperaturePage\n\n","import './App.css';\nimport React, {useEffect, useState} from 'react'\nimport {Route} from 'react-router';\nimport {StartScreen} from \"./StartScreen.js\";\nimport {Test} from \"./visualizations/Test\";\nimport papa from \"papaparse\";\nimport Layout from \"./Layout\";\nimport Welcome from \"./pages/Welcome\";\nimport moment from 'moment'\nimport DepthTemperaturePage from \"./pages/DepthTemperaturePage\";\n\nconst App = () => {\n    const [data, setData] = useState([])\n    const [attributes, setAttributes] = useState([])\n    const [loading, setLoading] = useState(true)\n    useEffect(() => {\n        papa.parse(\"infovis2/SFBay.csv\", {\n            download: true,\n            header: true,\n            dynamicTyping: true,\n            complete: function (results, file) {\n                let parsed = results.data.map(r => {return {...r, 'TimeStamp': moment(r['TimeStamp']).toDate()}})\n                parsed.pop()\n                setData(parsed)\n                setAttributes(Object.keys(parsed[0]))\n                setLoading(false)\n            }\n        })\n    }, [])\n    return (\n        <>\n            <Route exact path=\"/\" render={() => <StartScreen data={data} loading={loading}/>}/>\n\n            <Layout>\n                <Route exact path=\"/welcome\" render={() => <Welcome data={data}/>}/>\n                <Route exact path=\"/dt\" render={() => <DepthTemperaturePage data={data} attributes={attributes}/>}/>\n                <Route exact path=\"/vis\" render={() => <Test data={data}/>}/>\n            </Layout>\n\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}